server:
  port: 8080
spring:
  application:
    name: quickstart
  jmx:
    default-domain: quickstart
  #proxy-target-class: true这个选项不要开，否则会导致数据源切换失效
  aop:
    auto: true
  datasource:
    druid:
      #配置_StatViewServlet
      stat-view-servlet:
        allow: null
        deny: null
        url-pattern: /druid/*
        reset-enable: false
        #druid页面登录用户名
        login-password: admin
        #druid页面登录密码
        login-username: admin
        enabled: true
    dynamic:
      # 以下是支持的全局默认值
      druid:
        # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
#        aop-patterns: com.company.project.**.service.*
#        driver-class-name: com.mysql.jdbc.Driver
        initial-size: 10
        min-idle: 5
        max-active: 100
        max-wait: 10000
        validation-query: SELECT 1
        validation-query-timeout: 10000
        time-between-eviction-runs-millis: 30000
        #建议配置为true，不影响性能，并且保证安全性。
        #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
        test-while-idle: true
        #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
        test-on-borrow: true
        #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
        test-on-return: false
        filters: stat,wall # 注意这个值和druid原生不一致，默认启动了stat,wall
        wall:
          noneBaseStatementAllow: false
#          selectAllow: false
        stat:
          merge-sql:
          log-slow-sql:
          slow-sql-millis:
      primary: master
      strict: false #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源.
      datasource:
        #示例配置，读库
        master:
          name: write
          url: jdbc:mysql://localhost:3306/test?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false
          username: root
          password: root
#          druid:
#            public-key: #（非全局参数）设置即表示启用加密,底层会自动帮你配置相关的连接参数和filter，推荐使用本项目自带的加密方法。
        #示例配置，写库
        read_1:
          name: read
          url: jdbc:mysql://localhost:3306/read1?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false
          username: root
          password: root
        #示例配置，写库
        read_2:
          name: read
          url: jdbc:mysql://localhost:3306/read2?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false
          username: root
          password: root
        #示例配置，日志库
        log:
          name: log
          url: jdbc:mysql://localhost:3306/log?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false
          username: root
          password: root
#  quartz:
#    #相关属性配置,见org.springframework.boot.autoconfigure.quartz.QuartzProperties
#    properties:
#      org:
#        quartz:
#          scheduler:
#            instanceName: myQuartz
#            instanceId: AUTO
#          jobStore:
#            class: org.quartz.impl.jdbcjobstore.JobStoreTX
#            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#            tablePrefix: QRTZ_
#            isClustered: true
#            clusterCheckinInterval: 10000
#            useProperties: false
#          threadPool:
#            class: org.quartz.simpl.SimpleThreadPool
#            threadCount: 10
#            threadPriority: 5
#            threadsInheritContextClassLoaderOfInitializingThread: true
#    #数据库方式
#    job-store-type: jdbc
#    #初始化表结构
#    jdbc:
#      initialize-schema: never
#  redis:
#    password: null
#    database: 0
#    port: 6379
#    pool:
#      max-idle: 100
#      min-idle: 0
#      max-active: 300
#      max-wait: 1000
#    host: localhost
#    timeout: 10000
redisson:
  single-serverconfig:
    address: "redis://127.0.0.1:6379"
#    idleConnectionTimeout: 10000
#    pingTimeout: 1000
#    connectTimeout: 10000
#    timeout: 3000
#    retryAttempts: 3
#    retryInterval: 1500
#    reconnectionTimeout: 3000
#    failedAttempts: 3
#    password: null
#    subscriptionsPerConnection: 5
#    clientName: test
#    address: "redis://127.0.0.1:6379"
#    subscriptionConnectionMinimumIdleSize: 1
#    subscriptionConnectionPoolSize: 50
#    connectionMinimumIdleSize: 32
#    connectionPoolSize: 64
#    database: 0
#    dnsMonitoring: false
#    dnsMonitoringInterval: 5000
#    threads: 0
#    nettyThreads: 0
#    codec: !<org.redisson.codec.JsonJacksonCodec> {}
#    transportMode: NIO
testmap:
  - host: 1
    pwd: p1
  - host: 12
    pwd: p12
  - host: 13
    pwd: p13
springfox:
  documentation:
    swagger-ui:
      enabled: true
    open-api:
      enabled: true
